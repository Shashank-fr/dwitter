"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./hooks/useDwitter.ts":
/*!*****************************!*\
  !*** ./hooks/useDwitter.ts ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Dwitter_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Dwitter.json */ \"./hooks/Dwitter.json\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ethers */ \"./node_modules/ethers/lib.esm/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\nconst ContractABI = _Dwitter_json__WEBPACK_IMPORTED_MODULE_0__.abi;\nconst ContractAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\nconst Ethereum =  true && window.ethereum;\nconst getDwitterContract = ()=>{\n    const provider = new ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.providers.Web3Provider(Ethereum);\n    const signer = provider.getSigner();\n    return new ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.Contract(ContractAddress, ContractABI, signer);\n};\nconst useDwitter = ()=>{\n    //const Dwitter = getDwitterContract();\n    const [currentAccount, setCurrentAccount] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [dweets, setDweets] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([\n        \"\"\n    ]);\n    const [currentUser, setCurrentUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const connect = async ()=>{\n        try {\n            if (!Ethereum) {\n                alert(\"Please install MetaMask\");\n                return;\n            }\n            const accounts = await Ethereum.request({\n                method: \"eth_requestAccounts\"\n            });\n            if (accounts.length == 0) {\n                console.log(\"No authorized accounts\");\n                return;\n            }\n            const account = accounts[0];\n            debugger;\n            console.log(\"Connected to account:\", account);\n            setCurrentAccount(account);\n        } catch (e) {\n            console.error(e);\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!Ethereum) {\n            console.log(\"No ethereum wallets found, please get metamask\");\n            return;\n        }\n    //connect();\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (currentAccount) {\n            getUser();\n        }\n    }, [\n        currentAccount\n    ]);\n    const getUser = async ()=>{\n        const contract = getDwitterContract();\n        if (!currentAccount) return;\n        const user = await contract.getUser(currentAccount);\n        const { avatar , bio , name , username , wallet  } = user;\n        setCurrentUser({\n            avatar,\n            bio,\n            name,\n            username,\n            wallet\n        });\n        return user;\n    };\n    const createUser = async (username, name, bio, avatar)=>{\n        const contract = getDwitterContract();\n        const user = await contract.signup(username, name, bio, avatar);\n        console.log(user);\n        getUser();\n    };\n    const postDweet = async (dweet)=>{\n        const contract = getDwitterContract();\n        await contract.postDweet(dweet);\n        await getDweets;\n    };\n    const getDweets = async ()=>{\n        const contract = getDwitterContract();\n        const dweets = await contract.getDweets();\n        console.log(dweets);\n        setDweets(dweets);\n    };\n    return {\n        connect,\n        account: currentAccount,\n        user: currentUser,\n        createUser,\n        postDweet,\n        dweets\n    };\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (useDwitter);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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c2VEd2l0dGVyLnRzP2I2MDkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IER3aXR0ZXIgZnJvbSAnLi9Ed2l0dGVyLmpzb24nO1xuaW1wb3J0IHtldGhlcnN9IGZyb20gJ2V0aGVycyc7XG5pbXBvcnQge3VzZUVmZmVjdCwgdXNlU3RhdGV9IGZyb20gJ3JlYWN0JztcblxuXG5jb25zdCBDb250cmFjdEFCSSA9IER3aXR0ZXIuYWJpXG5jb25zdCBDb250cmFjdEFkZHJlc3MgPSAnMHg1RmJEQjIzMTU2NzhhZmVjYjM2N2YwMzJkOTNGNjQyZjY0MTgwYWEzJ1xuY29uc3QgRXRoZXJldW0gPSB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiAod2luZG93IGFzIGFueSkuZXRoZXJldW1cblxuY29uc3QgZ2V0RHdpdHRlckNvbnRyYWN0ID0gKCkgPT4ge1xuICAgIGNvbnN0IHByb3ZpZGVyID0gbmV3IGV0aGVycy5wcm92aWRlcnMuV2ViM1Byb3ZpZGVyKEV0aGVyZXVtKTtcbiAgICBjb25zdCBzaWduZXIgPSBwcm92aWRlci5nZXRTaWduZXIoKTtcbiAgICByZXR1cm4gbmV3IGV0aGVycy5Db250cmFjdChDb250cmFjdEFkZHJlc3MsIENvbnRyYWN0QUJJLCBzaWduZXIsKTtcbn07XG5cbnR5cGUgVXNlciA9IHtcbiAgICBhdmF0YXIgOiBzdHJpbmcsXG4gICAgYmlvIDogc3RyaW5nLFxuICAgIG5hbWUgOiBzdHJpbmcsXG4gICAgdXNlcm5hbWUgOiBzdHJpbmcsXG4gICAgd2FsbGV0IDogc3RyaW5nXG59XG5cbmNvbnN0IHVzZUR3aXR0ZXIgPSAoKSA9PiB7XG4gICAgLy9jb25zdCBEd2l0dGVyID0gZ2V0RHdpdHRlckNvbnRyYWN0KCk7XG5cbiAgICBjb25zdCBbY3VycmVudEFjY291bnQsIHNldEN1cnJlbnRBY2NvdW50XSA9IHVzZVN0YXRlPHN0cmluZz4oJycpO1xuICAgIGNvbnN0IFtkd2VldHMsIHNldER3ZWV0c10gPSB1c2VTdGF0ZTxzdHJpbmdbXT4oWycnXSk7XG4gICAgY29uc3QgW2N1cnJlbnRVc2VyLCBzZXRDdXJyZW50VXNlcl0gPSB1c2VTdGF0ZTxVc2VyIHwgbnVsbD4obnVsbCk7XG5cbiAgICBjb25zdCBjb25uZWN0ID0gYXN5bmMgKCkgPT4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgaWYoIUV0aGVyZXVtKXtcbiAgICAgICAgICAgICAgICBhbGVydCgnUGxlYXNlIGluc3RhbGwgTWV0YU1hc2snKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgY29uc3QgYWNjb3VudHMgPSBhd2FpdCBFdGhlcmV1bS5yZXF1ZXN0KHsgbWV0aG9kOiAnZXRoX3JlcXVlc3RBY2NvdW50cyd9KTtcbiAgICAgICAgICAgIGlmIChhY2NvdW50cy5sZW5ndGggPT0gMCkge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiTm8gYXV0aG9yaXplZCBhY2NvdW50c1wiKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNvbnN0IGFjY291bnQgPSBhY2NvdW50c1swXTtcbiAgICAgICAgICAgIGRlYnVnZ2VyO1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ0Nvbm5lY3RlZCB0byBhY2NvdW50OicsIGFjY291bnQpO1xuICAgICAgICAgICAgc2V0Q3VycmVudEFjY291bnQoYWNjb3VudCk7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZSk7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgdXNlRWZmZWN0KCAoKSA9PiB7XG4gICAgICAgIGlmICghRXRoZXJldW0pIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdObyBldGhlcmV1bSB3YWxsZXRzIGZvdW5kLCBwbGVhc2UgZ2V0IG1ldGFtYXNrJyk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgLy9jb25uZWN0KCk7XG4gICAgfSwgW10pO1xuXG4gICAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgaWYgKGN1cnJlbnRBY2NvdW50KSB7XG4gICAgICAgICAgICBnZXRVc2VyKCk7XG4gICAgICAgIH1cbiAgICB9LFtjdXJyZW50QWNjb3VudF0gKTtcblxuICAgIGNvbnN0IGdldFVzZXIgPSBhc3luYyAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGNvbnRyYWN0ID0gZ2V0RHdpdHRlckNvbnRyYWN0KCk7XG4gICAgICAgIGlmKCFjdXJyZW50QWNjb3VudCkgcmV0dXJuO1xuICAgICAgICBjb25zdCB1c2VyID0gYXdhaXQgY29udHJhY3QuZ2V0VXNlcihjdXJyZW50QWNjb3VudCk7XG4gICAgICAgIGNvbnN0IHthdmF0YXIsIGJpbywgbmFtZSwgdXNlcm5hbWUsIHdhbGxldH0gPSB1c2VyO1xuICAgICAgICBzZXRDdXJyZW50VXNlcih7YXZhdGFyLCBiaW8sIG5hbWUsIHVzZXJuYW1lLCB3YWxsZXR9KTtcbiAgICAgICAgcmV0dXJuIHVzZXI7XG4gICAgfTtcblxuICAgIGNvbnN0IGNyZWF0ZVVzZXIgPSBhc3luYyAoXG4gICAgICAgIHVzZXJuYW1lIDogc3RyaW5nLFxuICAgICAgICBuYW1lIDogc3RyaW5nLFxuICAgICAgICBiaW8gOiBzdHJpbmcsXG4gICAgICAgIGF2YXRhciA6IHN0cmluZ1xuICAgICkgPT4ge1xuICAgICAgICBjb25zdCBjb250cmFjdCA9IGdldER3aXR0ZXJDb250cmFjdCgpO1xuICAgICAgICBjb25zdCB1c2VyID0gYXdhaXQgY29udHJhY3Quc2lnbnVwKHVzZXJuYW1lLCBuYW1lLCBiaW8sIGF2YXRhcik7XG4gICAgICAgIGNvbnNvbGUubG9nKHVzZXIpO1xuICAgICAgICBnZXRVc2VyKCk7XG4gICAgfTtcblxuICAgIGNvbnN0IHBvc3REd2VldD0gYXN5bmMgKGR3ZWV0OiBzdHJpbmcpID0+IHtcbiAgICAgICAgY29uc3QgY29udHJhY3QgPSBnZXREd2l0dGVyQ29udHJhY3QoKTtcbiAgICAgICAgYXdhaXQgY29udHJhY3QucG9zdER3ZWV0KGR3ZWV0KTtcbiAgICAgICAgYXdhaXQgZ2V0RHdlZXRzXG4gICAgfTtcblxuICAgIGNvbnN0IGdldER3ZWV0cyA9IGFzeW5jICgpID0+IHtcbiAgICAgICAgY29uc3QgY29udHJhY3QgPSBnZXREd2l0dGVyQ29udHJhY3QoKTtcbiAgICAgICAgY29uc3QgZHdlZXRzID0gYXdhaXQgY29udHJhY3QuZ2V0RHdlZXRzKCk7XG4gICAgICAgIGNvbnNvbGUubG9nKGR3ZWV0cyk7XG4gICAgICAgIHNldER3ZWV0cyhkd2VldHMpO1xuICAgIH1cbiAgICByZXR1cm4geyBjb25uZWN0LCBhY2NvdW50OiBjdXJyZW50QWNjb3VudCwgdXNlcjogY3VycmVudFVzZXIsIGNyZWF0ZVVzZXIsIHBvc3REd2VldCwgZHdlZXRzIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCB1c2VEd2l0dGVyOyJdLCJuYW1lcyI6WyJEd2l0dGVyIiwiZXRoZXJzIiwidXNlRWZmZWN0IiwidXNlU3RhdGUiLCJDb250cmFjdEFCSSIsImFiaSIsIkNvbnRyYWN0QWRkcmVzcyIsIkV0aGVyZXVtIiwid2luZG93IiwiZXRoZXJldW0iLCJnZXREd2l0dGVyQ29udHJhY3QiLCJwcm92aWRlciIsInByb3ZpZGVycyIsIldlYjNQcm92aWRlciIsInNpZ25lciIsImdldFNpZ25lciIsIkNvbnRyYWN0IiwidXNlRHdpdHRlciIsImN1cnJlbnRBY2NvdW50Iiwic2V0Q3VycmVudEFjY291bnQiLCJkd2VldHMiLCJzZXREd2VldHMiLCJjdXJyZW50VXNlciIsInNldEN1cnJlbnRVc2VyIiwiY29ubmVjdCIsImFsZXJ0IiwiYWNjb3VudHMiLCJyZXF1ZXN0IiwibWV0aG9kIiwibGVuZ3RoIiwiY29uc29sZSIsImxvZyIsImFjY291bnQiLCJlIiwiZXJyb3IiLCJnZXRVc2VyIiwiY29udHJhY3QiLCJ1c2VyIiwiYXZhdGFyIiwiYmlvIiwibmFtZSIsInVzZXJuYW1lIiwid2FsbGV0IiwiY3JlYXRlVXNlciIsInNpZ251cCIsInBvc3REd2VldCIsImR3ZWV0IiwiZ2V0RHdlZXRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./hooks/useDwitter.ts\n"));

/***/ })

});